<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20140915</FitNesseVersion>
  <rootPath>IdmFit.HuebnerActiveDirectoryDriver.CreateGroup</rootPath>
    <result>
    <counts>
      <right>1</right>
      <wrong>1</wrong>
      <ignores>0</ignores>
      <exceptions>2</exceptions>
    </counts>
    <runTimeInMillis>5184</runTimeInMillis>
    <content>&lt;br/&gt;&lt;h1&gt;Erzeugen einer Gruppe im eDirectory AD Gruppen Container&lt;/h1&gt;
Im eDirectory wird eine Gruppe im Container ou=GROUPS,ou=ADsync,ou=DIENSTE,o=HUEBNER erzeugt, &lt;br/&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;script&lt;/td&gt;
		&lt;td&gt;&lt;span class="pass"&gt;Ldap Operation Script&lt;/span&gt;&lt;/td&gt;
		&lt;td colspan="4"&gt;metatree&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="exception closed"&gt;
		&lt;td class="error"&gt;create object&lt;/td&gt;
		&lt;td class="error"&gt;cn=citrone,ou=GROUPS,ou=adsync,ou=dienste,o=huebner&lt;/td&gt;
		&lt;td class="error"&gt;with class&lt;/td&gt;
		&lt;td class="error"&gt;groupOfNames&lt;/td&gt;
		&lt;td class="error"&gt;and attributes&lt;/td&gt;
		&lt;td class="error"&gt;&lt;table class="hash_table"&gt;
	&lt;tr class="hash_row"&gt;
		&lt;td class="hash_key"&gt;description&lt;/td&gt;
		&lt;td class="hash_value"&gt;Scoped Group&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;&lt;/td&gt;
	&lt;/tr&gt;&lt;tr class="exception-detail closed-detail"&gt;&lt;td colspan="6"&gt;&lt;pre&gt;__EXCEPTION__:com.novell.ldapchai.exception.ChaiOperationException: [LDAP: error code 68 - NDS error: entry already exists (-606)]
	at com.novell.ldapchai.exception.ChaiOperationException.forErrorMessage(ChaiOperationException.java:39) [ldapChai.jar]
	at com.novell.ldapchai.provider.JNDIProviderImpl.convertNamingException(JNDIProviderImpl.java:1002) [ldapChai.jar]
	at com.novell.ldapchai.provider.JNDIProviderImpl.createEntry(JNDIProviderImpl.java:277) [ldapChai.jar]
	at com.novell.ldapchai.provider.JNDIProviderImpl.createEntry(JNDIProviderImpl.java:247) [ldapChai.jar]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_65]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at java.lang.reflect.Method.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at com.novell.ldapchai.provider.AbstractWrapper.invoker(AbstractWrapper.java:80) [ldapChai.jar]
	at com.novell.ldapchai.provider.FailOverWrapper.failOverInvoke(FailOverWrapper.java:173) [ldapChai.jar]
	at com.novell.ldapchai.provider.FailOverWrapper.invoke(FailOverWrapper.java:134) [ldapChai.jar]
	at com.sun.proxy.$Proxy3.createEntry(Unknown Source) [rt.jar]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_65]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at java.lang.reflect.Method.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at com.novell.ldapchai.provider.AbstractWrapper.invoker(AbstractWrapper.java:80) [ldapChai.jar]
	at com.novell.ldapchai.provider.WatchdogWrapper.invoke(WatchdogWrapper.java:219) [ldapChai.jar]
	at com.sun.proxy.$Proxy3.createEntry(Unknown Source) [rt.jar]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_65]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at java.lang.reflect.Method.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at com.novell.ldapchai.provider.StatisticsWrapper.invoke(StatisticsWrapper.java:121) [ldapChai.jar]
	at com.sun.proxy.$Proxy3.createEntry(Unknown Source) [rt.jar]
	at com.novell.ldapchai.provider.ChaiProvider$createEntry$0.call(Unknown Source) [n/a]
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45) [groovy-all-2.3.6.jar:2.3.6]
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108) [groovy-all-2.3.6.jar:2.3.6]
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:124) [groovy-all-2.3.6.jar:2.3.6]
	at idmfit.LdapOperationScript.createObjectWithClassAndAttributes(LdapOperationScript.groovy:34) [file:/C:/Users/tschroet/MyPrograms/luna/workspace/guhFitNesse/bin/]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_65]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at java.lang.reflect.Method.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at fitnesse.slim.fixtureInteraction.DefaultInteraction.methodInvoke(DefaultInteraction.java:16) [fitnesse-standalone.jar]
	at fitnesse.slim.MethodExecutor.callMethod(MethodExecutor.java:43) [fitnesse-standalone.jar]
	at fitnesse.slim.MethodExecutor.invokeMethod(MethodExecutor.java:30) [fitnesse-standalone.jar]
	at fitnesse.slim.MethodExecutor.findAndInvoke(MethodExecutor.java:52) [fitnesse-standalone.jar]
	at fitnesse.slim.FixtureMethodExecutor.execute(FixtureMethodExecutor.java:20) [fitnesse-standalone.jar]
	at fitnesse.slim.StatementExecutor.getMethodExecutionResult(StatementExecutor.java:121) [fitnesse-standalone.jar]
	at fitnesse.slim.StatementExecutor.call(StatementExecutor.java:99) [fitnesse-standalone.jar]
	at fitnesse.slim.instructions.CallInstruction.executeInternal(CallInstruction.java:35) [fitnesse-standalone.jar]
	at fitnesse.slim.instructions.Instruction.execute(Instruction.java:30) [fitnesse-standalone.jar]
	at fitnesse.slim.ListExecutor$Executive.executeStatement(ListExecutor.java:49) [fitnesse-standalone.jar]
	at fitnesse.slim.ListExecutor$Executive.executeStatements(ListExecutor.java:43) [fitnesse-standalone.jar]
	at fitnesse.slim.ListExecutor.execute(ListExecutor.java:83) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.executeInstructions(SlimServer.java:106) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:93) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:68) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:54) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.serve(SlimServer.java:40) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.handle(SlimService.java:164) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.acceptOne(SlimService.java:172) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.accept(SlimService.java:134) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.startWithFactory(SlimService.java:65) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.main(SlimService.java:51) [fitnesse-standalone.jar]&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;die nach kurzer Zeit im Active Directory im Container OU=GROUPS,DC=2k12,DC=tsc erscheint&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;span class="pass"&gt;Sleep&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;5000&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;script&lt;/td&gt;
		&lt;td&gt;&lt;span class="pass"&gt;Ldap Operation Script&lt;/span&gt;&lt;/td&gt;
		&lt;td colspan="2"&gt;ad&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;span class="fail"&gt;ensure&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;object&lt;/td&gt;
		&lt;td&gt;CN=citrone,OU=GROUPS,DC=2k12,DC=tsc&lt;/td&gt;
		&lt;td&gt;exists&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;Wird hingegen eine Gruppe in einem anderen als dem Gruppen Container erzeugt &lt;br/&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;script&lt;/td&gt;
		&lt;td&gt;&lt;span class="pass"&gt;Ldap Operation Script&lt;/span&gt;&lt;/td&gt;
		&lt;td colspan="4"&gt;metatree&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="exception closed"&gt;
		&lt;td class="error"&gt;create object&lt;/td&gt;
		&lt;td class="error"&gt;cn=peaches,OU=USER,OU=EU,o=HUEBNER&lt;/td&gt;
		&lt;td class="error"&gt;with class&lt;/td&gt;
		&lt;td class="error"&gt;groupOfNames&lt;/td&gt;
		&lt;td class="error"&gt;and attributes&lt;/td&gt;
		&lt;td class="error"&gt;&lt;table class="hash_table"&gt;
	&lt;tr class="hash_row"&gt;
		&lt;td class="hash_key"&gt;description&lt;/td&gt;
		&lt;td class="hash_value"&gt;Unscoped Group&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;&lt;/td&gt;
	&lt;/tr&gt;&lt;tr class="exception-detail closed-detail"&gt;&lt;td colspan="6"&gt;&lt;pre&gt;__EXCEPTION__:com.novell.ldapchai.exception.ChaiOperationException: [LDAP: error code 68 - NDS error: entry already exists (-606)]
	at com.novell.ldapchai.exception.ChaiOperationException.forErrorMessage(ChaiOperationException.java:39) [ldapChai.jar]
	at com.novell.ldapchai.provider.JNDIProviderImpl.convertNamingException(JNDIProviderImpl.java:1002) [ldapChai.jar]
	at com.novell.ldapchai.provider.JNDIProviderImpl.createEntry(JNDIProviderImpl.java:277) [ldapChai.jar]
	at com.novell.ldapchai.provider.JNDIProviderImpl.createEntry(JNDIProviderImpl.java:247) [ldapChai.jar]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_65]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at java.lang.reflect.Method.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at com.novell.ldapchai.provider.AbstractWrapper.invoker(AbstractWrapper.java:80) [ldapChai.jar]
	at com.novell.ldapchai.provider.FailOverWrapper.failOverInvoke(FailOverWrapper.java:173) [ldapChai.jar]
	at com.novell.ldapchai.provider.FailOverWrapper.invoke(FailOverWrapper.java:134) [ldapChai.jar]
	at com.sun.proxy.$Proxy3.createEntry(Unknown Source) [rt.jar]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_65]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at java.lang.reflect.Method.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at com.novell.ldapchai.provider.AbstractWrapper.invoker(AbstractWrapper.java:80) [ldapChai.jar]
	at com.novell.ldapchai.provider.WatchdogWrapper.invoke(WatchdogWrapper.java:219) [ldapChai.jar]
	at com.sun.proxy.$Proxy3.createEntry(Unknown Source) [rt.jar]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_65]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at java.lang.reflect.Method.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at com.novell.ldapchai.provider.StatisticsWrapper.invoke(StatisticsWrapper.java:121) [ldapChai.jar]
	at com.sun.proxy.$Proxy3.createEntry(Unknown Source) [rt.jar]
	at com.novell.ldapchai.provider.ChaiProvider$createEntry$0.call(Unknown Source) [n/a]
	at idmfit.LdapOperationScript.createObjectWithClassAndAttributes(LdapOperationScript.groovy:34) [file:/C:/Users/tschroet/MyPrograms/luna/workspace/guhFitNesse/bin/]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_65]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at java.lang.reflect.Method.invoke(Unknown Source) [rt.jar:1.7.0_65]
	at fitnesse.slim.fixtureInteraction.DefaultInteraction.methodInvoke(DefaultInteraction.java:16) [fitnesse-standalone.jar]
	at fitnesse.slim.MethodExecutor.callMethod(MethodExecutor.java:43) [fitnesse-standalone.jar]
	at fitnesse.slim.MethodExecutor.invokeMethod(MethodExecutor.java:30) [fitnesse-standalone.jar]
	at fitnesse.slim.MethodExecutor.findAndInvoke(MethodExecutor.java:52) [fitnesse-standalone.jar]
	at fitnesse.slim.FixtureMethodExecutor.execute(FixtureMethodExecutor.java:20) [fitnesse-standalone.jar]
	at fitnesse.slim.StatementExecutor.getMethodExecutionResult(StatementExecutor.java:121) [fitnesse-standalone.jar]
	at fitnesse.slim.StatementExecutor.call(StatementExecutor.java:99) [fitnesse-standalone.jar]
	at fitnesse.slim.instructions.CallInstruction.executeInternal(CallInstruction.java:35) [fitnesse-standalone.jar]
	at fitnesse.slim.instructions.Instruction.execute(Instruction.java:30) [fitnesse-standalone.jar]
	at fitnesse.slim.ListExecutor$Executive.executeStatement(ListExecutor.java:49) [fitnesse-standalone.jar]
	at fitnesse.slim.ListExecutor$Executive.executeStatements(ListExecutor.java:43) [fitnesse-standalone.jar]
	at fitnesse.slim.ListExecutor.execute(ListExecutor.java:83) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.executeInstructions(SlimServer.java:106) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:93) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:68) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:54) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimServer.serve(SlimServer.java:40) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.handle(SlimService.java:164) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.acceptOne(SlimService.java:172) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.accept(SlimService.java:134) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.startWithFactory(SlimService.java:65) [fitnesse-standalone.jar]
	at fitnesse.slim.SlimService.main(SlimService.java:51) [fitnesse-standalone.jar]&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;br/&gt;wird diese Operation nicht �bertragen&lt;br/&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;script&lt;/td&gt;
		&lt;td&gt;&lt;span class="pass"&gt;Ldap Operation Script&lt;/span&gt;&lt;/td&gt;
		&lt;td colspan="2"&gt;ad&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;span class="pass"&gt;reject&lt;/span&gt;&lt;/td&gt;
		&lt;td&gt;object&lt;/td&gt;
		&lt;td&gt;cn=peaches,OU=USER,OU=EU,ou=User,ou=HUB,DC=2k12,DC=tsc&lt;/td&gt;
		&lt;td&gt;exists&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
</content>
    <relativePageName>CreateGroup</relativePageName>
            <instructions>
            <instructionResult>
        <instruction>{id='scriptTable_0_0', instruction='make', instanceName='scriptTableActor', className='LdapOperationScript', args=[metatree]}</instruction>
        <slimResult>pass(Ldap Operation Script)</slimResult>
                <expectation>
                    <status>pass</status>
                    <instructionId>scriptTable_0_0</instructionId>
                    <col>1</col>
                              <row>0</row>
                    <type>ConstructionExpectation</type>
                                        <evaluationMessage>Ldap Operation Script</evaluationMessage>
                  </expectation>
              </instructionResult>
            <instructionResult>
        <instruction>{id='scriptTable_0_1', instruction='call', instanceName='scriptTableActor', methodName='createObjectWithClassAndAttributes', args=[cn=citrone,ou=GROUPS,ou=adsync,ou=dienste,o=huebner, groupOfNames, &lt;table class="hash_table"&gt;
	&lt;tr class="hash_row"&gt;
		&lt;td class="hash_key"&gt;description&lt;/td&gt;
		&lt;td class="hash_value"&gt;Scoped Group&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;]}</instruction>
        <slimResult></slimResult>
                <expectation>
                    <status>error</status>
                    <instructionId>scriptTable_0_1</instructionId>
                              <type>ScriptActionExpectation</type>
                                      </expectation>
              </instructionResult>
            <instructionResult>
        <instruction>{id='decisionTable_1_0', instruction='make', instanceName='decisionTable_1', className='Sleep', args=[5000]}</instruction>
        <slimResult>pass(Sleep)</slimResult>
                <expectation>
                    <status>pass</status>
                    <instructionId>decisionTable_1_0</instructionId>
                    <col>0</col>
                              <row>0</row>
                    <type>ConstructionExpectation</type>
                                        <evaluationMessage>Sleep</evaluationMessage>
                  </expectation>
              </instructionResult>
            <instructionResult>
        <instruction>{id='scriptTable_2_0', instruction='make', instanceName='scriptTableActor', className='LdapOperationScript', args=[ad]}</instruction>
        <slimResult>pass(Ldap Operation Script)</slimResult>
                <expectation>
                    <status>pass</status>
                    <instructionId>scriptTable_2_0</instructionId>
                    <col>1</col>
                              <row>0</row>
                    <type>ConstructionExpectation</type>
                                        <evaluationMessage>Ldap Operation Script</evaluationMessage>
                  </expectation>
              </instructionResult>
            <instructionResult>
        <instruction>{id='scriptTable_2_1', instruction='call', instanceName='scriptTableActor', methodName='objectExists', args=[CN=citrone,OU=GROUPS,DC=2k12,DC=tsc]}</instruction>
        <slimResult>fail()</slimResult>
                <expectation>
                    <status>fail</status>
                    <instructionId>scriptTable_2_1</instructionId>
                    <col>0</col>
                              <row>1</row>
                    <type>EnsureActionExpectation</type>
                                      </expectation>
              </instructionResult>
            <instructionResult>
        <instruction>{id='scriptTable_3_0', instruction='make', instanceName='scriptTableActor', className='LdapOperationScript', args=[metatree]}</instruction>
        <slimResult>pass(Ldap Operation Script)</slimResult>
                <expectation>
                    <status>pass</status>
                    <instructionId>scriptTable_3_0</instructionId>
                    <col>1</col>
                              <row>0</row>
                    <type>ConstructionExpectation</type>
                                        <evaluationMessage>Ldap Operation Script</evaluationMessage>
                  </expectation>
              </instructionResult>
            <instructionResult>
        <instruction>{id='scriptTable_3_1', instruction='call', instanceName='scriptTableActor', methodName='createObjectWithClassAndAttributes', args=[cn=peaches,OU=USER,OU=EU,o=HUEBNER, groupOfNames, &lt;table class="hash_table"&gt;
	&lt;tr class="hash_row"&gt;
		&lt;td class="hash_key"&gt;description&lt;/td&gt;
		&lt;td class="hash_value"&gt;Unscoped Group&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;]}</instruction>
        <slimResult></slimResult>
                <expectation>
                    <status>error</status>
                    <instructionId>scriptTable_3_1</instructionId>
                              <type>ScriptActionExpectation</type>
                                      </expectation>
              </instructionResult>
            <instructionResult>
        <instruction>{id='scriptTable_4_0', instruction='make', instanceName='scriptTableActor', className='LdapOperationScript', args=[ad]}</instruction>
        <slimResult>pass(Ldap Operation Script)</slimResult>
                <expectation>
                    <status>pass</status>
                    <instructionId>scriptTable_4_0</instructionId>
                    <col>1</col>
                              <row>0</row>
                    <type>ConstructionExpectation</type>
                                        <evaluationMessage>Ldap Operation Script</evaluationMessage>
                  </expectation>
              </instructionResult>
            <instructionResult>
        <instruction>{id='scriptTable_4_1', instruction='call', instanceName='scriptTableActor', methodName='objectExists', args=[cn=peaches,OU=USER,OU=EU,ou=User,ou=HUB,DC=2k12,DC=tsc]}</instruction>
        <slimResult>pass()</slimResult>
                <expectation>
                    <status>pass</status>
                    <instructionId>scriptTable_4_1</instructionId>
                    <col>0</col>
                              <row>1</row>
                    <type>RejectActionExpectation</type>
                                      </expectation>
              </instructionResult>
          </instructions>
      </result>
      <finalCounts>
    <right>0</right>
    <wrong>1</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>5184</totalRunTimeInMillis>
  
</testResults>

