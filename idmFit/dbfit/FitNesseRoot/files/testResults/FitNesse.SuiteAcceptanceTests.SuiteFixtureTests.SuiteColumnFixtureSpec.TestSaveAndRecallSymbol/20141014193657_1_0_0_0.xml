<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20140915</FitNesseVersion>
  <rootPath>FitNesse.SuiteAcceptanceTests.SuiteFixtureTests.SuiteColumnFixtureSpec.TestSaveAndRecallSymbol</rootPath>
    <result>
    <counts>
      <right>5</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>0</exceptions>
    </counts>
    <runTimeInMillis>17</runTimeInMillis>
    <content>&lt;div class="collapsible closed"&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='#' class='expandall'&gt;Expand&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='#' class='collapseall'&gt;Collapse&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
	&lt;p class="title"&gt;Included page: &lt;a href="FitNesse.SuiteAcceptanceTests.SetUp"&gt;.FitNesse.SuiteAcceptanceTests.SetUp&lt;/a&gt; &lt;a href="FitNesse.SuiteAcceptanceTests.SetUp?edit&amp;amp;redirectToReferer=true&amp;amp;redirectAction=" class="edit"&gt;(edit)&lt;/a&gt;&lt;/p&gt;
	&lt;div&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Import&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;fitnesse.fixtures&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;SetUp&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br/&gt;&lt;h3&gt;You can save and recall symbols in a ColumnFixture.  You do this by using the =id? and id= syntax.&lt;/h3&gt;
&lt;br/&gt;&lt;ul&gt;
	&lt;li&gt;=id? or =id() takes the output of a function and stores it in the symbol named by the cell.  In the example below the integer 1 is stored in the symbol &lt;i&gt;one&lt;/i&gt;, and the integer 2 is stored in the symbol &lt;i&gt;two&lt;/i&gt;.&lt;/li&gt;
	&lt;li&gt;id= recalls the value of the symbol named by the cell, and puts it in the &lt;i&gt;id&lt;/i&gt; variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td colspan="2"&gt;fitnesse.fixtures.ColumnFixtureTestFixture&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;input&lt;/td&gt;
		&lt;td&gt;=output?&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;1&lt;/td&gt;
		&lt;td&gt;one &lt;span class="fit_grey"&gt; = 1&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;two &lt;span class="fit_grey"&gt; = 2&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td colspan="2"&gt;fitnesse.fixtures.ColumnFixtureTestFixture&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;input=&lt;/td&gt;
		&lt;td&gt;output?&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;one &lt;span class="fit_grey"&gt; = 1&lt;/span&gt;&lt;/td&gt;
		&lt;td class="pass"&gt;1&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;two &lt;span class="fit_grey"&gt; = 2&lt;/span&gt;&lt;/td&gt;
		&lt;td class="pass"&gt;2&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;b&gt;With classed integral types, there's a chance the value may be null as a correct result:&lt;/b&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td colspan="2"&gt;fitnesse.fixtures.ColumnFixtureTestFixture&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;integerInput&lt;/td&gt;
		&lt;td&gt;=integerOutput?&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;1&lt;/td&gt;
		&lt;td&gt;one &lt;span class="fit_grey"&gt; = 1&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;two &lt;span class="fit_grey"&gt; = 2&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;null&lt;/td&gt;
		&lt;td&gt;three &lt;span class="fit_grey"&gt; = null&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td colspan="2"&gt;fitnesse.fixtures.ColumnFixtureTestFixture&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;integerInput=&lt;/td&gt;
		&lt;td&gt;integerOutput?&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;one &lt;span class="fit_grey"&gt; = 1&lt;/span&gt;&lt;/td&gt;
		&lt;td class="pass"&gt;1&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;two &lt;span class="fit_grey"&gt; = 2&lt;/span&gt;&lt;/td&gt;
		&lt;td class="pass"&gt;2&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;three &lt;span class="fit_grey"&gt; = null&lt;/span&gt;&lt;/td&gt;
		&lt;td class="pass"&gt;null&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;pre&gt;
public class ColumnFixtureTestFixture extends ColumnFixture
{
  public int input;
  public int output() {return input;}

  public Integer integerInput;
  public Integer integerOutput() { return integerInput; }

  public boolean exception() throws Exception {throw new Exception("I thowed up");}
}
&lt;/pre&gt;
&lt;br/&gt;&lt;br/&gt;&lt;div class="collapsible closed"&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='#' class='expandall'&gt;Expand&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='#' class='collapseall'&gt;Collapse&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
	&lt;p class="title"&gt;Included page: &lt;a href="FitNesse.SuiteAcceptanceTests.TearDown"&gt;.FitNesse.SuiteAcceptanceTests.TearDown&lt;/a&gt; &lt;a href="FitNesse.SuiteAcceptanceTests.TearDown?edit&amp;amp;redirectToReferer=true&amp;amp;redirectAction=" class="edit"&gt;(edit)&lt;/a&gt;&lt;/p&gt;
	&lt;div&gt;&lt;hr/&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;tear down&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
    <relativePageName>TestSaveAndRecallSymbol</relativePageName>
          </result>
      <finalCounts>
    <right>1</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>18</totalRunTimeInMillis>
  
</testResults>

